
// Функция - Получить случайное число
//
// Параметры:
//  Мин	 - Число - Минимальное знч диапазона случайных чисел
//  Макс - Число - Максимальное знч диапазона случайных чисел
//  Разрядов - Число - Количество разрядов если необходимо получить число с дробной частью
// 
// Возвращаемое значение:
//  Число - Случайное число из заданного диапазона
//
Функция ПолучитьСлучайноеЧисло(Мин, Макс, Разрядов = 0) Экспорт

   Коэффициент 		= POW(10, Разрядов);
   ГСЧ 				= Новый ГенераторСлучайныхЧисел();
   СлучайноеЧисло 	= ГСЧ.СлучайноеЧисло(Мин * Коэффициент, Макс * Коэффициент) / Коэффициент;
	
	Возврат СлучайноеЧисло;

КонецФункции // ПолучитьСлучайноеЧисло()

// Функция - Заменить не валидные символы в строке
//
// Параметры:
//  РабочаяСтрока	 - Строка - Строка из которой необходимо удалить спец символы
// 
// Возвращаемое значение:
//  Строка - Строка которая была передана параметром НО без заданных в функции символов
//
Функция ЗаменитьНеВалидныеСимволыВСтроке(РабочаяСтрока) Экспорт
	
	ВыходнаяСтрока		= РабочаяСтрока;
	НевалидныеСимволы 	= Новый Массив;
	
	НевалидныеСимволы.Добавить("’");
	НевалидныеСимволы.Добавить("`");
	НевалидныеСимволы.Добавить(",");
	НевалидныеСимволы.Добавить(".");
	НевалидныеСимволы.Добавить("!");
	НевалидныеСимволы.Добавить("""");
	НевалидныеСимволы.Добавить("@");
	НевалидныеСимволы.Добавить("#");
	НевалидныеСимволы.Добавить("№");
	НевалидныеСимволы.Добавить("$");
	НевалидныеСимволы.Добавить(";");
	НевалидныеСимволы.Добавить("%");
	НевалидныеСимволы.Добавить("^");
	НевалидныеСимволы.Добавить(":");
	НевалидныеСимволы.Добавить("&");
	НевалидныеСимволы.Добавить("?");
	НевалидныеСимволы.Добавить("*");
	НевалидныеСимволы.Добавить("(");
	НевалидныеСимволы.Добавить(")");
	НевалидныеСимволы.Добавить("-");
	НевалидныеСимволы.Добавить("_");	
	НевалидныеСимволы.Добавить("=");
	НевалидныеСимволы.Добавить("+");
	НевалидныеСимволы.Добавить("/");
	НевалидныеСимволы.Добавить("*");
	НевалидныеСимволы.Добавить("}");
	НевалидныеСимволы.Добавить("{");
	НевалидныеСимволы.Добавить("[");
	НевалидныеСимволы.Добавить("]");
	НевалидныеСимволы.Добавить("'");
	НевалидныеСимволы.Добавить("<");
	НевалидныеСимволы.Добавить(">");
	НевалидныеСимволы.Добавить("|");
	НевалидныеСимволы.Добавить(" ");
	
	Выборка = РегистрыСведений.НевалидныеСимволыСлов.Выбрать();
	Пока Выборка.Следующий() Цикл
		НевалидныеСимволы.Добавить(Выборка.Символ);	
	КонецЦикла;	
	
	Для каждого НеВалидныйСимвол Из НевалидныеСимволы Цикл	
		ВыходнаяСтрока = СтрЗаменить(ВыходнаяСтрока, НеВалидныйСимвол, "");	
	КонецЦикла;
	
	Возврат ВыходнаяСтрока;

КонецФункции // ПолучитьСтруктуруСправочникаКартинка()

Функция ПолучитьСтруктуруСправочникаПроизведения() Экспорт

	ДанныеСтруктура = Новый Структура;
	
	ДанныеСтруктура.Вставить("Description", 		"");
	ДанныеСтруктура.Вставить("DeletionMark", 		Ложь);
	ДанныеСтруктура.Вставить("Связь", 				Справочники.Произведения.ПустаяСсылка());
	ДанныеСтруктура.Вставить("Дата",				'00010101');
	ДанныеСтруктура.Вставить("_Автор",				"");
	ДанныеСтруктура.Вставить("Подсказка",			"");
	ДанныеСтруктура.Вставить("Коммент",				"");
	ДанныеСтруктура.Вставить("СодержитКартинку", 	Ложь);
	ДанныеСтруктура.Вставить("КартинкаСтруктура",	Неопределено);
	ДанныеСтруктура.Вставить("Тело", 				Новый Массив);
	
	Возврат ДанныеСтруктура;

КонецФункции // ПолучитьСтруктуруСправочникаПроизведения()

Функция ПолучитьСтруктуруСправочникаКартинка() Экспорт

	ДанныеСтруктура = Новый Структура;
	
	ДанныеСтруктура.Вставить("Description", 		"");
	ДанныеСтруктура.Вставить("DeletionMark", 		Ложь);
	ДанныеСтруктура.Вставить("Данные",				Неопределено);
	ДанныеСтруктура.Вставить("ДатаЗагрузки",		'00010101010101');
	ДанныеСтруктура.Вставить("Коммент",				"");
	
	Возврат ДанныеСтруктура;

КонецФункции // ПолучитьСтруктуруСправочникаКартинка()

// Функция - Получить список авторов и количество произведений
// 
// Возвращаемое значение:
//	Структура - ИЗ
//	*Всего - Число - Всего записей в справочнике "Произведение"
//	*Выборка - Запрос.Выборка - Количество произведений каждого Автора
//
Функция ПолучитьСтатистикуВсехАвторов() Экспорт
	
	СтатистикаАвторов = Новый Структура;
	СтатистикаАвторов.Вставить("Всего");
	СтатистикаАвторов.Вставить("Выборка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Произведения.Автор.Ссылка 			КАК Ссылка,
		|	Представление(Произведения.Автор) 	КАК ИмяАвтора,
		|	КОЛИЧЕСТВО(Произведения.Ссылка) 	КАК Количество
		|ИЗ
		|	Справочник.Произведения КАК Произведения
		|ГДЕ
		|	НЕ Произведения.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	Произведения.Автор
		|
		|УПОРЯДОЧИТЬ ПО
		|	Количество
		|;
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(*) КАК Количество
		|ИЗ
		|	Справочник.Произведения КАК Произведения
		|ГДЕ
		|	НЕ Произведения.ПометкаУдаления";
	
	РезультатЗапроса 	= Запрос.ВыполнитьПакет();
	ВыборкаСтатистика	= РезультатЗапроса[0].Выбрать();
	ВыборкаВсего		= РезультатЗапроса[1].Выбрать();
	
	СтатистикаАвторов.Всего		= ?(ВыборкаВсего.Следующий(), ВыборкаВсего.Количество, 0);
	СтатистикаАвторов.Выборка 	= ВыборкаСтатистика;
	
	Возврат СтатистикаАвторов;

КонецФункции // ПолучитьСтатистикуВсехАвторов()

